RSS <- t(y -x %*% betta) %*% (y - x %*% betta)
betta <- xtxi %*% t(x) %*% y
RSS <- t(y -x %*% betta) %*% (y - x %*% betta)
residuals <- (y-x %*% betta)
deviance(lmod)
summary(lmod)$sigma
sigma = sqrt(deviance(lmod) /df.residual(lmod))
sigma
residuals <- (y-x %*% betta)
residuals
r_squared <- 1 - (RSS / (sum(y - mean(y))))
r_squared
r_squared <- 1 - (RSS / (sum(y - mean(y)^2)))
r_squared
r_squared <- 1 - (RSS / (sum(y - mean(y))^2))
r_squared
r_squared <- 1 - (RSS / TSS)
TSS <- sum((y - mean(y))^2)
r_squared <- 1 - (RSS / TSS)
r_squared
confint(lmod, level = 0.95)
confint(lmod, level = 0.90)
install.packages("elopse")
install.packages("elipse")
install.packages("ellipse")
plot(ellipse(lmod,c("age","lbph")),type="l")
require(ellipse)
plot(ellipse(lmod,c("age","lbph")),type="l")
points(coef(lmod)[2], coef(lmod)[6], pch=19)
require(ellipse)
plot(ellipse(lmod,c("age","lbph")),type="l")
points(coef(lmod)["age"],coef(g)["lbph"],pch=18)
points(0,0)
points(coef(lmod)["age"],coef(lmod)["lbph"],pch=18)
abline(v=confint(lmod)["age",],lty=2)
abline(h=confint(lmod)["lbph",],lty=2)
points(coef(lmod)["age"],coef(lmod)["lbph"],pch=19)
abline(v=confint(lmod)["age",],lty=2)
abline(h=confint(lmod)["lbph",],lty=2)
require(ellipse)
plot(ellipse(lmod,c("age","lbph")),type="l")
points(0,0)
points(coef(lmod)["age"],coef(lmod)["lbph"],pch=19)
abline(v=confint(lmod)["age",],lty=2)
abline(h=confint(lmod)["lbph",],lty=2)
age_lbph_model <- lm(lpsa ~ age + lbph, prostate)
summary(age_lbph_model)
lmods <- lm(lpsa ~ age, prostate) tstats[i] <- summary(lmods)$coef[3,3]
nreps <- 4000
for(i in 1:nreps){
lmods <- lm(lpsa ~ age, prostate) tstats[i] <- summary(lmods)$coef[3,3]
}
mean(abs(tstats) > abs(lms$coef[4,3]))
tstats[i] <- summary(lmods)$coef[3,3]
for(i in 1:nreps){
lmods <- lm(lpsa ~ age, prostate)
tstats[i] <- summary(lmods)$coef[3,3]
}
lmods <- lm(lpsa ~ age, prostate)
tstats[i] <- summary(lmods)$coef[4,3]
# We do not reject the null hypothesis as it confidence interval contains the origin.
summary(lmod)$coef[4,3]
# We do not reject the null hypothesis as it confidence interval contains the origin.
nreps <- 4000
for(i in 1:nreps){
lmods <- lm(lpsa ~ age +lbph, prostate)
tstats[i] <- summary(lmods)$coef[4,3]
}
mean(abs(tstats) > abs(lms$coef[4,3]))
# We do not reject the null hypothesis as it confidence interval contains the origin.
nreps <- 4000
tstats <- numeric(nreps)
for(i in 1:nreps){
lmods <- lm(lpsa ~ age +lbph, prostate)
tstats[i] <- summary(lmods)$coef[4,3]
}
mean(abs(tstats) > abs(lms$coef[4,3]))
mean(abs(tstats) > abs(lmods$coef[4,3]))
lmods <- lm(lpsa ~ age +lbph, prostate
lmods <- lm(lpsa ~ age +lbph, prostate)
lmods <- lm(lpsa ~ age +lbph, prostate)
summary(lmods)
lmods <- lm(lpsa ~ lbph age, prostate)
summary(lmods)$coef[4,3]
lmods <- lm(lpsa ~ lbph + age, prostate)
summary(lmods)$coef[4,3]
summary(lmods)
summary(lmods)$coef[3,3]
tstats <- numeric(nreps)
for(i in 1:nreps){
lmods <- lm(lpsa ~ age +l bph, prostate)
tstats[i] <- summary(lmods)$coef[3,3]
}
for(i in 1:nreps){
lmods <- lm(lpsa ~ age +l bph, prostate)
tstats[i] <- summary(lmods)$coef[3,3]
}
tstats[i] <- summary(lmods)$coef[3,3]}
for(i in 1:nreps){
lmods <- lm(lpsa ~ age +l bph, prostate)
tstats[i] <- summary(lmods)$coef[3,3]
}
nreps <- 4000
lmods <- lm(lpsa ~ lbph + age, prostate)
summary(lmods)$coef[3,3]
summary(lmods)
for(i in 1:nreps){
lmods <- lm(lpsa ~ age +lbph, prostate)
tstats[i] <- summary(lmods)$coef[3,3]
}
mean(abs(tstats) > abs(lmods$coef[4,3]))
mean(abs(tstats) > abs(lmods$coef[3,3]))
mean(abs(tstats) > abs(lmods$coef[3,3]))
# We do not reject the null hypothesis as it confidence interval contains the origin.
nreps <- 4000
lmods <- lm(lpsa ~ lbph + age, prostate)
summary(lmods)$coef[3,3]
summary(lmods)
tstats <- numeric(nreps)
for(i in 1:nreps){
lmods <- lm(lpsa ~ age +lbph, prostate)
tstats[i] <- summary(lmods)$coef[3,3]
}
mean(abs(tstats) > abs(lmods$coef[3,3]))
mean(abs(tstats) > abs(lms$coef[3,3]))
mean(abs(tstats) > abs(summary(lmods)$coef[3,3]))
# We do not reject the null hypothesis as it confidence interval contains the origin.
nreps <- 4000
lmods <- lm(lpsa ~ lbph + age, prostate)
summary(lmods)$coef[3,3]
summary(lmods)
tstats <- numeric(nreps)
for(i in 1:nreps){
lmods <- lm(lpsa ~ age +lbph, prostate)
tstats[i] <- summary(lmods)$coef[3,3]
}
mean(abs(tstats) > abs(summary(lmods)$coef[3,3]))
# We do not reject the null hypothesis as it confidence interval contains the origin.
nreps <- 4000
lmods <- lm(lpsa ~ lbph + age, prostate)
summary(lmods)$coef[3,3]
summary(lmods)
tstats <- numeric(nreps)
for(i in 1:nreps){
lmods <- lm(lpsa ~ lbph + sample(age), prostate)
tstats[i] <- summary(lmods)$coef[3,3]
}
mean(abs(tstats) > abs(summary(lmods)$coef[3,3]))
summary(lmods)
nreps <- 4000
lmods <- lm(lpsa ~ lbph + age, prostate)
summary(lmods)$coef[3,3]
summary(lmods)
tstats <- numeric(nreps)
for(i in 1:nreps){
lmods <- lm(lpsa ~ lbph + sample(age), prostate)
tstats[i] <- summary(lmods)$coef[3,3]
}
mean(abs(tstats) > abs(summary(lmods)$coef[3,3]))
lmods <- lm(lpsa ~ lbph + age, prostate)
summary(lmods)
nreps <- 4000
lmods <- lm(lpsa ~ lbph + age, prostate)
summary(lmods)$coef[3,3]
summary(lmods)
tstats <- numeric(nreps)
for(i in 1:nreps){
lmods <- lm(lpsa ~ lbph + age, prostate)
tstats[i] <- summary(lmods)$coef[3,3]
}
mean(abs(tstats) > abs(summary(lmods)$coef[3,3]))
# We do not reject the null hypothesis as it confidence interval contains the origin.
nreps <- 4000
lmods <- lm(lpsa ~ lbph + age, prostate)
summary(lmods)$coef[3,3]
summary(lmods)
tstats <- numeric(nreps)
for(i in 1:nreps){
lmods <- lm(lpsa ~ lbph + age, prostate)
tstats[i] <- summary(lmods)$coef[3,3]
}
mean(abs(tstats) > abs(summary(lmods)$coef[3,3]))
nreps <- 4000
lmods <- lm(lpsa ~ lbph + age, prostate)
summary(lmods)$coef[3,3]
summary(lmods)
tstats <- numeric(nreps)
for(i in 1:nreps){
lmods <- lm(lpsa ~ lbph + sample(age), prostate)
tstats[i] <- summary(lmods)$coef[3,3]
}
mean(abs(tstats) > abs(summary(lmods)$coef[3,3]))
summary(lmod)
new_model <- (lpsa ~ lcavol + llweight + svi, prostate)
new_model <- (lpsa ~ lcavol + lweight + svi, prostate)
new_model <- (lpsa ~ lcavol + lweight + svi, prostate)
new_model <- lm(lpsa ~ lcavol + lweight + svi, prostate)
summary(new_model)
nreps <- 4000
lmods <- lm(lpsa ~ lbph + sample(age), prostate)
summary(lmods)$coef[3,3]
summary(lmods)
tstats <- numeric(nreps)
for(i in 1:nreps){
lmods <- lm(lpsa ~ lbph + sample(age), prostate)
tstats[i] <- summary(lmods)$coef[3,3]
}
mean(abs(tstats) > abs(summary(lmods)$coef[3,3]))
nreps <- 4000
lmods <- lm(lpsa ~ lbph + sample(age), prostate)
summary(lmods)$coef[3,3]
summary(lmods)
tstats <- numeric(nreps)
for(i in 1:nreps){
lmods <- lm(lpsa ~ lbph + sample(age), prostate)
tstats[i] <- summary(lmods)$coef[3,3]
}
mean(abs(tstats) > abs(summary(lmods)$coef[3,3]))
summary(lmod)
new_model <- lm(lpsa ~ lcavol + lweight + svi, prostate)
summary(new_model)
lmods <- lm(lpsa ~ lbph + sample(age) +., prostate)
nreps <- 4000
lmods <- lm(lpsa ~ lbph + sample(age) +., prostate)
summary(lmods)$coef[3,3]
summary(lmods)
tstats <- numeric(nreps)
for(i in 1:nreps){
lmods <- lm(lpsa ~ lbph + sample(age) +., prostate)
tstats[i] <- summary(lmods)$coef[3,3]
}
mean(abs(tstats) > abs(summary(lmods)$coef[3,3]))
nreps <- 4000
lmods <- lm(lpsa ~ lbph + sample(age) +., prostate)
summary(lmods)$coef[3,3]
summary(lmods)
tstats <- numeric(nreps)
for(i in 1:nreps){
lmods <- lm(lpsa ~ lbph + sample(age) +., prostate)
tstats[i] <- summary(lmods)$coef[3,3]
}
mean(abs(tstats) > abs(summary(lmods)$coef[3,3]))
lmods <- lm(lpsa ~ lbph + sample(age) +. -age, prostate)
nreps <- 4000
lmods <- lm(lpsa ~ lbph + sample(age) +. -age, prostate)
summary(lmods)$coef[3,3]
summary(lmods)
tstats <- numeric(nreps)
for(i in 1:nreps){
lmods <- lm(lpsa ~ lbph + sample(age) +. -age, prostate)
tstats[i] <- summary(lmods)$coef[3,3]
}
mean(abs(tstats) > abs(summary(lmods)$coef[3,3]))
nreps <- 4000
lmods <- lm(lpsa ~ lbph + sample(age) +. -age, prostate)
summary(lmods)$coef[3,3]
summary(lmods)
tstats <- numeric(nreps)
for(i in 1:nreps){
lmods <- lm(lpsa ~ lbph + sample(age) +. -age, prostate)
tstats[i] <- summary(lmods)$coef[3,3]
}
mean(abs(tstats) > abs(summary(lmods)$coef[3,3]))
lmod <- lm(lpsa ~ lcavol + lweight + age + lbph + svi + lcp +  gleason + pgg45, prostate)
mean(abs(tstats) > abs(summary(lmod)$coef[3,3]))
nreps <- 4000
lmods <- lm(lpsa ~ lbph + sample(age) +. -age, prostate)
summary(lmods)$coef[3,3]
summary(lmods)
tstats <- numeric(nreps)
for(i in 1:nreps){
lmods <- lm(lpsa ~ lbph + sample(age) +. -age, prostate)
tstats[i] <- summary(lmods)$coef[3,3]
}
mean(abs(tstats) > abs(summary(lmod)$coef[3,3]))
summary(lmods)
summary(lmod)
nreps <- 4000
lmods <- lm(lpsa ~ lbph + sample(age) +. -age, prostate)
summary(lmods)$coef[3,3]
summary(lmods)
tstats <- numeric(nreps)
for(i in 1:nreps){
lmods <- lm(lpsa ~ lbph + sample(age) +. -age, prostate)
tstats[i] <- summary(lmods)$coef[3,3]
}
mean(abs(tstats) > abs(summary(lmod)$coef[4,3]))
anova(lmod, new_model)
?cheddar
cheesy_model <- lm(taste, ., cheddar)
cheesy_model <- lm(taste ~ ., cheddar)
summary(cheesy_model)
log_cheesy_model <- lm(taste ~ log(Acetic) + log(H2S) + Lactic, cheddar)
summary(log_cheesy_model)
log_cheesy_model <- lm(taste ~ exp(Acetic) + exp(H2S) + Lactic, cheddar)
summary(log_cheesy_model)
log_cheesy_model <- lm(taste ~ exp(Acetic) + exp(H2S) + Lactic, cheddar)
summary(log_cheesy_model)
Only Lactic is significant at the 5% level on the original scale
adjusted_cheesy_model <- lm(taste ~ Acetic, 0.1*H2S, Lactic, cheddar)
adjusted_cheesy_model <- lm(taste ~ Acetic+ 0.1*H2S + Lactic, cheddar)
adjusted_cheesy_model <- lm(taste ~ Acetic + (0.1*H2S) + Lactic, cheddar)
new_coeff
new_coeff <- summary(cheesy_model$coeff[3,1])
new_coeff <- summary(cheesy_model)$coeff[3,1]
new_coeff
new_coeff <- 0.1 *summary(cheesy_model)$coeff[3,1]
new_coeff
new_coeff <- 0.01 *summary(cheesy_model)$coeff[3,1]
new_coeff
summary(log_cheesy_model)
e^(0.01) - 1
exp^(0.01) - 1
asnwer
answer <- exp(0.01) - 1 * (100)
answer
answer <- (exp(0.01) - 1) * (100)
answer
model1 <- lm(lpsa ~ ., prostate)
new_patient <- data.frame(lcavol = 1.44692,
lweight = 3.62301,
age = 65.00000,
lbph = 0.30010,
svi = 0.00000,
lcp = -0.79851,
gleason = 7.00000,
pgg45 = 15.00000)
prediction1 <- predict.lm(new_patient)
prediction1 <- predict.lm(fit, new_patient)
prediction1 <- predict.lm(model1, new_patient)
prediction1
?prostate
summary(prostate$lpsa)
new_patient2 <- data.frame(lcavol = 1.44692,
lweight = 3.62301,
age = 20.00000,
lbph = 0.30010,
svi = 0.00000,
lcp = -0.79851,
gleason = 7.00000,
pgg45 = 15.00000)
prediction2 <- predict.lm(model1, new_patient2)
prediction2
prediction1 <- predict.lm(model1, new_patient, interval = "prediction")
prediction1
prediction2 <- predict.lm(model1, new_patient2, interval = "prediction")
prediction2
summary(prostate$age)
summary(model1)
model2 <- lm(lpsa ~ lcavol + lweight + svi, prostate)
prediction3 <- predict.lm(model2, new_patient, interval = "prediction")
prediction3
prediction4 <- predict.lm(model2, new_patient2, interval = "prediction")
prediction4
summary(teengamb)
sex <- factor(sex , 0)
sex <- factor(teengamb$sex , 0)
sex
summary(teengamb)
teengamb$sex <- factor(teengamb$sex)
mean(teengamb)
avg_male <- sapply(male_only_data[,1:4], mean)
male_only_data <- teengamb[teengamb$sex %in% 0,]
avg_male <- sapply(male_only_data[,1:4], mean)
avg_male <- sapply(male_only_data[,1:4], mean)
male_only_data <- teengamb[teengamb$sex %in% 0,]
teengamb
male_only_data <- teengamb[teengamb$sex %in% 0,]
avg_male <- sapply(male_only_data[,1:4], mean)
avg_male
require(package = 'faraway')
male_only_data <- teengamb[teengamb$sex %in% 0,]
avg_male <- sapply(male_only_data[,1:4], mean)
avg_male
model3 <- lm(gamble ~ sex + status + income + verbal, teengamb)
predict_males <- predict(model3, avg_male, interval = "prediction")
model3 <- lm(gamble ~ sex + status + income + verbal, teengamb)
predict_males <- predict(model3, avg_male, interval = "prediction")
model3
summary(model3)
predict_males <- predict(model3, avg_male, interval = "prediction")
predict_males <- predict.lm(model3, avg_male, interval = "prediction")
model3 <- lm(gamble ~ sex + status + income + verbal, teengamb)
summary(model3)
avg_male<-data.frame("sex"=avg_xi[1],"status"=avg_xi[2],"income"=avg_xi[3],"verbal"=avg_xi[4])
predict_males <- predict.lm(model3, avg_male, interval = "prediction")
mean(teengamb)
male_only_data <- teengamb[teengamb$sex %in% 0,]
avg_male <- sapply(male_only_data[,1:4], mean)
avg_male
model3 <- lm(gamble ~ sex + status + income + verbal, teengamb)
summary(model3)
avg_males<-data.frame("sex"=avg_xi[1],"status"=avg_xi[2],"income"=avg_xi[3],"verbal"=avg_xi[4])
predict_males <- predict.lm(model3, avg_males, interval = "prediction")
male_only_data <- teengamb[teengamb$sex %in% 0,]
avg_male <- sapply(male_only_data[,1:4], mean)
avg_male
model3 <- lm(gamble ~ sex + status + income + verbal, teengamb)
summary(model3)
avg_males <-data.frame("sex"=avg_male[1],"status"=avg_male[2],"income"=avg_male[3],"verbal"=avg_male[4])
predict_males <- predict.lm(model3, avg_males, interval = "prediction")
predict_males
avg_males_max <-data.frame("sex"=avg_male_max[1],"status"=avg_male_max[2],"income"=avg_male_max[3],"verbal"=avg_male_max[4])
avg_male_max <- sapply(male_only_data[,1:4], max)
avg_male_max
avg_males_max <-data.frame("sex"=avg_male_max[1],"status"=avg_male_max[2],"income"=avg_male_max[3],"verbal"=avg_male_max[4])
predict_males_max <- predict.lm(model3, avg_males_max, interval = "prediction")
predict_males_max
model3 <- lm(sqrt(gamble) ~ sex + status + income + verbal, teengamb)
model4 <- lm(sqrt(gamble) ~ sex + status + income + verbal, teengamb)
model4
summary(model4)
model4 <- lm(sqrt(gamble) ~ sex + status + income + verbal, teengamb)
summary(model4)
avg_males <-data.frame("sex"=avg_male[1],"status"=avg_male[2],"income"=avg_male[3],"verbal"=avg_male[4])
predict_males2 <- predict.lm(model4, avg_males, interval = "prediction")
predict_males2
prostate
?teengamb
4.39^2
predict_males_max
predict_males2
4.39^2; 0.1104836^2; 8.670872^2
female1 <- data.frame("sex" = 1, "status" = 20, "income" = 1, "verbal" = 20)
female1 <- data.frame("sex" = 1, "status" = 20, "income" = 1, "verbal" = 20)
predict_female <- predict.lm(model4, female1, interval = "prediction")
predict_female
female1 <- data.frame("sex" = 1, "status" = 20, "income" = 1, "verbal" = 10)
predict_female <- predict.lm(model4, female1, interval = "prediction")
predict_female
predict_female^2
?snail
xtabs(water ~ temp + humid, snail)/4
# Our table estimate would be:
table_est = 72.5 - 1.5 + 4.5
table_est
water_model <- lm(water ~ temperature, humidity, snails)
water_model <- lm(water ~ temp + humid, snails)
water_model <- lm(water ~ temp + humid, snails)
water_model <- lm(water ~ temp + humid, snail)
water_model <- lm(water ~ temp + humid, snail)
predict_water <- predict(water_model, data.frame("temp" = 25, "humid" = 60))
predict_water
predict_water1 <- predict(water_model, data.frame("temp" = 30, "humid" = 75))
predict_water1
snail
predict_water1
.47349/0.18333
predict_water2 <- predict(water_model, data.frame("temp" = 30, "humid" = 30*2.58272))
predict_water2
predict_water3 <- predict(water_model, data.frame("temp" = 50/2.58272, "humid" = 50))
predict_water3
predict_water2 <- predict(water_model, data.frame("temp" = 30*2.58272, "humid" = 30))
predict_water2
predict_water3 <- predict(water_model, data.frame("temp" = 50, "humid" = 50/2.58272))
predict_water3
summary(snail)
summary(water_model)
humid = (0.8 - 0.18333*25 - 52.61081)0.47349
humid = (0.8 - 0.18333*25 - 52.61081)/0.47349
humid
humid = (80 - 0.18333*25 - 52.61081)/0.47349
humid
humid = (80 + 0.18333*25 - 52.61081)/0.47349
humid
data <- read.table("uscrime.txt", headers = TRUE)
data <- read.table(data = "uscrime.txt", headers = TRUE)
require("read.table")
require(read.table)
require(data.table)
data <- read.table(data = "uscrime.txt", headers = TRUE)
data <- data.table(data = "uscrime.txt", headers = TRUE)
data
data <- read.table(data = "uscrime.txt", headers = TRUE)
data <- read.table(data = "uscrime.txt", header = TRUE)
data <- read.table("uscrime.txt", header = TRUE)
setwd("/Users/alimujtaba/Google Drive/isye6501modelling/isye6501homeworks")
require(data.table)
data <- read.table("uscrime.txt", header = TRUE)
data
require(data.table)
data <- read.table("uscrime.txt", header = TRUE)
setwd("/Users/alimujtaba/Google Drive/isye6501modelling/isye6501homeworks/hw5")
require(data.table)
data <- read.table("uscrime.txt", header = TRUE)
data
model <- lm(Crime ~ . data = data)
model <- lm(Crime ~ ., data = data)
crime <- read.table("uscrime.txt", header = TRUE)
crime
model <- lm(Crime ~ ., data = crime)
crime_data <- read.table("uscrime.txt", header = TRUE)
crime_data
model <- lm(Crime ~ ., data = crime_data)
summary(model)
new_data_point = data.frame(M = 14.0, So = 0,  Ed = 10.0,
Po1 = 12.0,
Po2 = 15.5,
LF = 0.640,
M.F = 94.0,
Pop = 150,
NW = 1.1,
U1 = 0.120,
U2 = 3.6,
Wealth = 3200,
Ineq = 20.1,
Prob = 0.04,
Time = 39.0)
predict <- predict.lm(model, new_data_point)
predict
knitr::opts_chunk$set(echo = TRUE)
plot(model)
